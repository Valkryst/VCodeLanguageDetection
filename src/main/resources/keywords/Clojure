*|0
+|0
->
->>
-|0
.
..
/|0
<=|0
<|0
==|0
=|0
>=|0
>|0
add-watch
agent
agent-error
alias
alter
alter-meta!
and
apply
aset
assert
assert-valid-fdecl
assoc!
assoc
associative?
atom
await
await-for
bigdec
bigint
biginteger
boolean
butlast
byte
case
cast
char?
chunk
chunk-append
chunk-buffer
chunk-cons
chunk-first
chunk-next
chunk-rest
chunked-seq?
class
class?
coll
coll?
commute
comp
comparator
compare
compare-and-set!
compile
complement
concat
cond
condp
conj!
conj
cons
constantly
contains?
count
counted?
create-ns
cycle
dec
decimal?
declare
delay
delay?
deref
difference
disj!
disj
dissoc!
dissoc
distinct?
do
doall
dorun
doseq
dosync
dotimes
doto
double
drop
drop-last
drop-while
empty
empty?
ensure
error-handler
error-mode
eval
even?
extend
extend-protocol
extend-type
false?
ffirst
filter
filterv
find
find-keyword
first
flatten
float
float?
flush
fn
fn?
fnext
for
force
format
future
future-call
gen-class
gensym
get
get-in
get-validator
hash-map
hash-set
identity
if
if-let
if-not
ifn?
import
in-ns
inc
instance?
int
integer?
intern
intersection
into
into-array
io!
isa?
iterate
juxt
key
keys
keyword
keyword?
last
lazy-seq
let
letfn
libspec?
line-seq
list
list*
list?
load
locking
loop
macroexpand
macroexpand-1
map
map?
mapcat
mapv
max
memfn
memoize
merge
meta
min
mod
monitor-enter
monitor-exit
name
namespace
neg?
new
newline
next
nfirst
nil?
nnext
not
not-any?
not-every?
not=
ns
nth
nthnext
nthrest
num
number?
odd?
or
partial
partition
peek
persistent!
pop!
pop
pos?
pr
pr-on
print-dup
print-method
printf
prn
promise
proxy
quot
quote
rand
rand-int
range
ratio?
rational?
rationalize
re-find
re-groups
read
read-line
recur
reduce
reduced
reduced?
ref
ref-history-count
ref-max-history
ref-min-history
ref-set
refer
refset
reify
release-pending-sends
rem
remove
remove-watch
repeat
replicate
reset!
reset-meta!
resolve
rest
restart-agent
reverse
reversible?
rseq
second
select-keys
send
send-off
seq
seq?
sequence
sequential?
set!
set-error-handler
set-error-mode!
set-validator!
set?
short
shutdown-agents
sigs
slurp
sort
sort-by
sorted-map
sorted-map-by
sorted-set
sorted-set-by
sorted?
split-at
split-with
spread
str
string?
subvec
swap!
symbol
symbol?
sync
take
take-last
take-while
throw
throw-if
time
to-array
transient
true?
try
type
unchecked-add
unchecked-add-int
unchecked-dec
unchecked-dec-inc
unchecked-inc
unchecked-inc-int
unchecked-negate
unchecked-subtract
unchecked-subtract-int
union
update-in
use
val
vals
var
vary-meta
vec
vector
vector?
when
when-let
when-not
while
with-meta
with-open
zero?
zipmap