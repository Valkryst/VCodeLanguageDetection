package com.valkryst.VCodeLanguageDetection.language;

public class PHP extends Language {
    private static final String[] KEYWORDS = {
        // Main Keywords
        "__CLASS__",
        "__COMPILER_HALT_OFFSET__",
        "__DIR__",
        "__FILE__",
        "__FUNCTION__",
        "__LINE__",
        "__METHOD__",
        "__NAMESPACE__",
        "__TRAIT__",
        "abstract",
        "and",
        "array",
        "as",
        "binary",
        "bool",
        "boolean",
        "break",
        "callable",
        "case",
        "catch",
        "class",
        "clone",
        "const",
        "continue",
        "declare",
        "default",
        "die",
        "do",
        "double",
        "echo",
        "else",
        "elseif",
        "empty",
        "enddeclare",
        "endfor",
        "endforeach",
        "endif",
        "endswitch",
        "endwhile",
        "enum",
        "eval",
        "exit",
        "extends",
        "final",
        "finally",
        "float",
        "for",
        "foreach",
        "from",
        "global",
        "goto",
        "if",
        "implements",
        "include",
        "include_once",
        "instanceof",
        "insteadof",
        "int",
        "integer",
        "interface",
        "isset",
        "iterable",
        "list",
        "match|0",
        "mixed",
        "never",
        "new",
        "object",
        "or",
        "print",
        "private",
        "protected",
        "public",
        "readonly",
        "real",
        "require",
        "require_once",
        "return",
        "string",
        "switch",
        "throw",
        "trait",
        "try",
        "unset",
        "use",
        "var",
        "void",
        "while",
        "xor",
        "yield",

        // Built Ins
        "__PHP_Incomplete_Class",
        "AppendIterator",
        "ArgumentCountError",
        "ArithmeticError",
        "ArrayAccess",
        "ArrayIterator",
        "ArrayObject",
        "AssertionError",
        "BackedEnum",
        "BadFunctionCallException",
        "BadMethodCallException",
        "CachingIterator",
        "CallbackFilterIterator",
        "Closure",
        "CompileError",
        "Countable",
        "Directory",
        "DirectoryIterator",
        "DivisionByZeroError",
        "DomainException",
        "EmptyIterator",
        "ErrorException",
        "Error|0",
        "Exception",
        "Fiber",
        "FilesystemIterator",
        "FilterIterator",
        "Generator",
        "GlobIterator",
        "InfiniteIterator",
        "InvalidArgumentException",
        "Iterator",
        "IteratorAggregate",
        "IteratorIterator",
        "LengthException",
        "LimitIterator",
        "LogicException",
        "MultipleIterator",
        "NoRewindIterator",
        "OuterIterator",
        "OutOfBoundsException",
        "OutOfRangeException",
        "OverflowException",
        "parent",
        "ParentIterator",
        "ParseError",
        "php_user_filter",
        "RangeException",
        "RecursiveArrayIterator",
        "RecursiveCachingIterator",
        "RecursiveCallbackFilterIterator",
        "RecursiveDirectoryIterator",
        "RecursiveFilterIterator",
        "RecursiveIterator",
        "RecursiveIteratorIterator",
        "RecursiveRegexIterator",
        "RecursiveTreeIterator",
        "RegexIterator",
        "RuntimeException",
        "SeekableIterator",
        "self",
        "Serializable",
        "SplDoublyLinkedList",
        "SplFileInfo",
        "SplFileObject",
        "SplFixedArray",
        "SplHeap",
        "SplMaxHeap",
        "SplMinHeap",
        "SplObjectStorage",
        "SplObserver",
        "SplPriorityQueue",
        "SplQueue",
        "SplStack",
        "SplSubject",
        "SplTempFileObject",
        "static",
        "stdClass",
        "Stringable",
        "Throwable",
        "Traversable",
        "TypeError",
        "UnderflowException",
        "UnexpectedValueException",
        "UnhandledMatchError",
        "UnitEnum",
        "WeakMap",
        "WeakReference",

        // Literals
        "false",
        "null",
        "true"
    };
}
